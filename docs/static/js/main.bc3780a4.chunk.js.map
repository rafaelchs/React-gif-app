{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getGif.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resul","json","data","gifs","map","id","images","downsized_medium","GifGrid","setImages","useEffect","then","GifExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGMA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAElB,EAAkCC,mBAAS,IAA3C,mBAAMC,EAAN,KAAiBC,EAAjB,KAiBA,OAEQ,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAQd,SACA,uBAAOO,KAAK,OAAQC,MAAOT,EAC3BU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAuB/BZ,EAAYe,UAAW,CACnBd,cAAee,IAAUC,KAAKC,YAGlBlB,QCrBDmB,EAZK,SAAC,GAAU,IAATC,EAAQ,EAARA,IAElB,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAIL,EAAIK,Y,uBCWLC,EAjBD,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACNL,EADM,iDAC0CM,UAAWF,GADrD,+DAEQG,MAAMP,GAFd,cAENQ,EAFM,gBAGSA,EAAMC,OAHf,uBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAI,SAAAf,GAAM,IAAD,EACvB,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QAT9B,kBAaLW,GAbK,4CAAF,sDCsCCK,EAnCC,SAAC,GAAe,IAAdZ,EAAa,EAAbA,SAEd,EAA4BzB,mBAAS,IAArC,mBAAOmC,EAAP,KAAeG,EAAf,KAcA,OAZAC,qBAAU,WAENf,EAASC,GACJe,KAAMF,KAEb,CAAEb,IAQA,qCACI,6BAAKA,IAGGU,EAAOF,KAAI,SAAAf,GAAG,OACV,cAAC,EAAD,CACCA,IAAKA,GADYA,EAAIgB,WCU/BO,EAhCK,WAEhB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAkB3C,EAAlB,KAOA,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWT,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACAA,SAAUA,GADIA,YCftCkB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bc3780a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) =>{\r\n\r\n    const[inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n       \r\n    }\r\n\r\n    return(\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n            <input type='text'  value={inputValue}\r\n            onChange={handleInputChange}/>\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default  AddCategory;","import React from \"react\";\r\n\r\nconst GifGridItem = ({img}) =>{\r\n\r\n    return(\r\n        <div className=\"card animate__backInDown animate__delay-4s\">\r\n            <img src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","\r\nconst  getGifs =async( category )=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=12&api_key=fj8I403ZG7bUWeI72Kd9fgRvsYls7Pmb`;\r\n    const resul = await fetch(url);\r\n    const {data} = await resul.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import React, { useState, useEffect } from \"react\";\r\nimport GifGridItem from \"./GifGridItem\"\r\nimport getGifs from \"./helpers/getGif\";\r\n\r\nconst GifGrid = ({category}) =>{\r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       \r\n        getGifs( category )\r\n            .then( setImages );\r\n\r\n    },[ category ])\r\n\r\n\r\n    \r\n\r\n   \r\n\r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n            \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem key={img.id}\r\n                         img={img}/>\r\n                        \r\n                    ))\r\n                }\r\n            \r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifGrid;","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExperApp = ()=>{ \r\n\r\n    const [categories,setCategories] =  useState(['Shaman King']);\r\n\r\n    //const handleAdd = () =>{\r\n        \r\n      //  setCategories([...categories,'Naruto']);\r\n    //}*/\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GifGrid key={category} \r\n                        category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n           \r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default GifExperApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './GifExpertApp';\nimport GifExperApp from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExperApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}